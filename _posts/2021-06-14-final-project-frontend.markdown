---
layout: post
title:      "Final Project Frontend"
date:       2021-06-14 20:20:41 +0000
permalink:  final_project_frontend
---

The front end of my project took a little more work. I was tasked with creating a minimum of five stateless components, using ES6 syntax where appropriate, Redux and react-thunk middleware, and react-router to create a single page application that would fetch, both to get from and post to my Rails api I setup previously. My strategy for this was to create a basic React app that worked using react-router. This allowed each component to manage its own state and allowed to get each piece functioning as I wanted. After that point I added in Redux and react-thunk to the project. I went component-by-component, setting them up to use Connect and mapping state and/or dispatch to props, as needed. I have all of my actions collected into an actions directory with index being the one my reducers import from. All of my reducers are in a reducers directory, with index being a combined reducer. This allows for the added convenince of letting each reducer set and manage its own state individually, which means that the global store will have individual entries for in state for each model that currently has data. Its also convenient that I can dispatch all actions to the combined reducer and they will filter through as needed. This became extra handy when one particular action needed to effect the state for two different models. I was able to handle that by simply adding in the action to each reducer and everything went smoothly. I enjoyed working with React and Redux. 

I used Tailwind to manage some basic styling... with some help. I'm not sold on Tailwind just yet, I'd like to try another option and see how they compare. It was nice that I didn't have to do anything thinking in regards to which style was going affect which part of any component. Since everything was written inline, no style would override any other style. On the other hand, I had to write some style more than once which didn't sit right with my training to not repeat myself. My project could use more styling to look nicer to I'm on a tight deadline so I aimed for a minimum viable project on this one. I imagine that this might be similar to a real world developer job where any individual developer might want to add more detail, create additional features, or improve styling, but the project deadline won't allow it. Sometimes, you just have to do the bare minimum and hope that you can get more time later to imporve things if possible.

I struggled a bit with this process. Managing everything annd following actions and props through from component to component is something I'd like to have some more experience with. I feel confident that I could add on to this project, rebuild it from scratch, or create a new one with the skills I developed working on this project. 
